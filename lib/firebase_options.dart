// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  // SECURITY: These values should be replaced with your actual Firebase config
  // Get these from: Firebase Console → Project Settings → General → Your apps
  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'YOUR_WEB_API_KEY_HERE', // Replace with your actual web API key
    appId: 'YOUR_WEB_APP_ID_HERE',   // Replace with your actual web app ID
    messagingSenderId: 'YOUR_SENDER_ID_HERE', // Replace with your sender ID
    projectId: 'o6hxc54nwwi030f8y17tsfe3qxhlt5',
    authDomain: 'o6hxc54nwwi030f8y17tsfe3qxhlt5.firebaseapp.com',
    storageBucket: 'o6hxc54nwwi030f8y17tsfe3qxhlt5.appspot.com',
    measurementId: 'YOUR_MEASUREMENT_ID_HERE', // Replace with your measurement ID
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'YOUR_ANDROID_API_KEY_HERE', // Replace with your Android API key
    appId: 'YOUR_ANDROID_APP_ID_HERE',   // Replace with your Android app ID
    messagingSenderId: 'YOUR_SENDER_ID_HERE',
    projectId: 'o6hxc54nwwi030f8y17tsfe3qxhlt5',
    storageBucket: 'o6hxc54nwwi030f8y17tsfe3qxhlt5.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'YOUR_IOS_API_KEY_HERE',     // Replace with your iOS API key
    appId: 'YOUR_IOS_APP_ID_HERE',       // Replace with your iOS app ID
    messagingSenderId: 'YOUR_SENDER_ID_HERE',
    projectId: 'o6hxc54nwwi030f8y17tsfe3qxhlt5',
    storageBucket: 'o6hxc54nwwi030f8y17tsfe3qxhlt5.appspot.com',
    iosBundleId: 'com.instonic.trashit',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'YOUR_MACOS_API_KEY_HERE',   // Replace with your macOS API key
    appId: 'YOUR_MACOS_APP_ID_HERE',     // Replace with your macOS app ID
    messagingSenderId: 'YOUR_SENDER_ID_HERE',
    projectId: 'o6hxc54nwwi030f8y17tsfe3qxhlt5',
    storageBucket: 'o6hxc54nwwi030f8y17tsfe3qxhlt5.appspot.com',
    iosBundleId: 'com.instonic.trashit',
  );
}